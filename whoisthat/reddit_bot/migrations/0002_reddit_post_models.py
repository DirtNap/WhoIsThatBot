# Generated by Django 3.0.7 on 2020-06-15 17:11

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('reddit_bot', '0001_reddit_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('post_id', models.CharField(max_length=32)),
                ('title', models.TextField()),
                ('permalink', models.CharField(max_length=512)),
                ('post_create_date', models.DateTimeField()),
                ('tokenized', models.NullBooleanField()),
                ('posted_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reddit_bot.Reddit')),
            ],
        ),
        migrations.CreateModel(
            name='PostPersonTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('token', models.CharField(max_length=128)),
                ('confirmed', models.NullBooleanField()),
                ('corrected', models.NullBooleanField()),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_tokens', to='reddit_bot.Post')),
            ],
        ),
        migrations.CreateModel(
            name='PostNonPersonTokens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('token', models.CharField(max_length=128)),
                ('part_of_speech', models.CharField(choices=[('0', 'Untagged'), ('84', 'adjective'), ('85', 'adposition'), ('86', 'adverb'), ('87', 'auxiliary'), ('88', 'conjunction'), ('89', 'coordinating conjunction'), ('90', 'determiner'), ('91', 'interjection'), ('92', 'noun'), ('93', 'numeral'), ('94', 'particle'), ('95', 'pronoun'), ('96', 'proper noun'), ('97', 'punctuation'), ('98', 'subordinating conjunction'), ('99', 'symbol'), ('100', 'verb'), ('101', 'other'), ('102', 'end of line'), ('103', 'space')], default='0', max_length=3)),
                ('person_translation', models.CharField(blank=True, max_length=128, null=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='non_person_tokens', to='reddit_bot.Post')),
            ],
        ),
        migrations.AddIndex(
            model_name='postpersontokens',
            index=models.Index(fields=['token'], name='idx_ppt_token'),
        ),
        migrations.AddConstraint(
            model_name='postpersontokens',
            constraint=models.UniqueConstraint(fields=('post', 'token'), name='uq_ppt_post_token'),
        ),
        migrations.AddIndex(
            model_name='postnonpersontokens',
            index=models.Index(fields=['token', 'part_of_speech'], name='idx_pnpt_token_pos'),
        ),
        migrations.AddConstraint(
            model_name='postnonpersontokens',
            constraint=models.UniqueConstraint(fields=('post', 'token'), name='uq_pnpt_post_token'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['title'], name='idx_post_title'),
        ),
        migrations.AddConstraint(
            model_name='post',
            constraint=models.UniqueConstraint(fields=('post_id',), name='uq_post_post_id'),
        ),
    ]
